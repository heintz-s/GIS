{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/dom-events/6",
    "result": {"data":{"mdx":{"id":"bef2bfb0-d581-5606-9a00-de8d6284c126","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DOM und Events\",\n  \"date\": \"2021-11-08T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Document Object Model (DOM)\"), mdx(\"p\", null, \"Anzeige von HTML im Browser:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTML Dokument wird geladen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTML Dokument wird geparsed (Umwandlung des HTML Code in eine zur Anzeige und Interaktion geeignete Form)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"es werden Objekte erstellt, die in einer Baumstruktur miteinander verbunden sind = \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/TR/WD-DOM/introduction.html\"\n  }, \"Document Object Model (DOM)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"jeweils Objekte f\\xFCr alle Elemente, Attribute, Text\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anzeige der Seite basierend auf dem DOM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM kann manipuliert werden und Anzeige \\xE4ndert sich direkt\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript kann auf DOM Objekte zugreifen und diese \\xE4ndern, bzw. l\\xF6schen oder neu hinzuf\\xFCgen\")))), mdx(\"p\", null, \"DOM ist eine Programmierschnittstelle (application programming interface = API)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"um die Struktur des Dokument-Baumes zu erstellen (mit Elementen, Attributen, Text)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"um das Dokument \\xFCber Methoden manipulieren zu k\\xF6nnen\")), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts\"\n  }, \"DOM Objekt Typen\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/GIS/636d06dced0485ad74f31f6b28e433e1/dom-objects.svg\",\n    \"alt\": \"DOM Objekt Typen\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Object\"), \": Prototyp aller Objekte\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"EventTarget\"), \": Potentielles Ziel von Events\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Node\"), \": Knoten im DOM Baum\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Attr\"), \": Attribut eines DOM Elements\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Text\"), \": Text Inhalt von Attribut oder Element\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"HTMLElement\"), \": HTML Element im DOM Baum\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Document\"), \": Seite im Browser mit DOM Baum (Zugriff \\xFCber die globale Variable \\\"document\\\")\")), mdx(\"h3\", null, \"Beispiel DOM Baum\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/GIS/f98441cc36b90cf278ab2ccecafae35f/dom-example.svg\",\n    \"className\": \"gatsby-img-attributes\",\n    \"style\": {\n      \"padding\": \"0.5em 1em\",\n      \"cssFloat\": \"right\",\n      \"backgroundColor\": \"white\"\n    },\n    \"alt\": \"DOM Beispiel\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<html lang=\\\"de\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>Titel der Seite</title>\\n  </head>\\n  <body>\\n    <p>Text im Browserfenster</p>\\n  </body>\\n</html>\\n\")), mdx(\"p\", null, \"DOM im Chrome Browser untersuchen: von Styles auf Properties wechseln\"), mdx(\"h1\", null, \"Auf DOM Objekte im HTML Dokument zugreifen\"), mdx(\"h3\", null, \"Zugriff \\xFCber globale Variable 'document'.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zugriff\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.head\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt das \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLHeadElement\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.body\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt das \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLBodyElement\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.documentElement\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt das Wurzel \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLElement\"), \" des Dokuments zur\\xFCck\")))), mdx(\"h3\", null, \"Node/Element Eigenschaften um durch den DOM zu navigieren\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eigenschaft\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".children\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt eine \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLCollection\"), \" von allen Kind Elementen zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".childNodes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt eine \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"NodeList\"), \" von allen Kind Knoten zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".firstElementChild\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt erstes Kind \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Element\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".firstChild\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt erstes Kind \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Node\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".parentNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt den Eltern \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Node\"), \" zur\\xFCck\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/HTMLCollection\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"HTMLCollection\")), \": Sammlung von DOM Element Objekten; live (automatisches Update bei \\xC4nderungen im DOM)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Node#NodeList\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"NodeList\")), \" Sammlung von Knoten Objekten; kann live oder statisch sein\"), mdx(\"h3\", null, \"Element Eigenschaften/Methoden um auf Attribute zuzugreifen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eigenschaft/Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".attributes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt eine \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"NamedNodeMap\"), \" aller Attribut Objekte eines Elements zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".getAttribute(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"name\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt Wert f\\xFCr das Attribut \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"name\"), \" des Elements zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".textContent\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt den Textinhalt eines Knoten und seiner Kinder als \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"String\"), \" zur\\xFCck\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<html lang=\\\"de\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>Titel der Seite</title>\\n  </head>\\n  <body>\\n    <div class=\\\"test\\\">\\n      <p>Text im Browserfenster</p>\\n    </div>\\n    <img\\n      src=\\\"https://webuser.hs-furtwangen.de/~heintzs/gis/smiley.png\\\"\\n      alt=\\\"lachender Smiley\\\"\\n      title=\\\"ein Bild\\\"\\n    />\\n  </body>\\n</html>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let body: HTMLBodyElement = document.body;\\nfor (let child: Element of body.children) {\\n  console.log(child);\\n  console.log(child.attributes);\\n  console.log(child.textContent);\\n}\\n\")), mdx(\"h1\", null, \"Elemente im DOM gezielt finden\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.getElementById(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"id\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Element\"), \" mit angegebener \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"id\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.getElementsByTagName(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"tag\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLCollection\"), \" aller \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Elemente\"), \" mit angegebenem \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"tag\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.getElementsByClassName(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"class\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLCollection\"), \" aller \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Elemente\"), \" mit angegebener \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"class\"), \" zur\\xFCck\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.querySelector(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"cssQuery\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt erstes \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Element\"), \" zur\\xFCck, das der \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"cssQuery\"), \" entspricht\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.querySelectorAll(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"cssQuery\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"NodeList\"), \" aller \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Elemente\"), \" zur\\xFCck, die der \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"cssQuery\"), \" entsprechen\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div class=\\\"blue\\\">\\n  <p id=\\\"testID\\\" class=\\\"blue\\\">Test</p>\\n  <p>Test2</p>\\n</div>\\n<p>Test3</p>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let elementById: Element = document.getElementById(\\\"testID\\\");\\nlet elementsByTag: HTMLCollection = document.getElementsByTagName(\\\"p\\\");\\nlet secondElementByTag: Element = elementsByTag[1];\\nlet elementsByClass: HTMLCollection = document.getElementsByClassName(\\\"blue\\\");\\nlet firstElementByQuery: Element = document.querySelector(\\\"p.blue\\\");\\nlet elementsByQuery: NodeList = document.querySelectorAll(\\\"p.blue\\\");\\nconsole.log(elementById);\\nconsole.log(elementsByTag);\\nconsole.log(secondElementByTag);\\nconsole.log(elementsByClass);\\nconsole.log(firstElementByQuery);\\nconsole.log(elementsByQuery);\\n\")), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.typescriptlang.org/docs/handbook/dom-manipulation.html#dom-manipulation\"\n  }, \"Manipulation des DOM\")), mdx(\"h3\", null, \"DOM Objekte erzeugen / \\xE4ndern / einbinden\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"document.createElement(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"tagName\"), \", \", \"[optionen]\", \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Erzeugt ein \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"HTMLELement\"), \" mit dem Tag \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"tagName\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"setAttribute(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"name\"), \", \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \")\", mdx(\"sup\", {\n    parentName: \"td\",\n    \"id\": \"fnref-createattribute\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-createattribute\",\n    \"className\": \"footnote-ref\"\n  }, \"createattribute\"))), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Setzt f\\xFCr das Element den Wert des Attributs \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"name\"), \" auf \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"textContent\", mdx(\"sup\", {\n    parentName: \"td\",\n    \"id\": \"fnref-createtextnode\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-createtextnode\",\n    \"className\": \"footnote-ref\"\n  }, \"createtextnode\"))), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Textinhalt eines Knoten setzen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"cloneNode(\", \"[deep]\", \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Erzeugt eine Kopie des Knoten (und der Kindknoten, wenn deep = true)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"appendChild(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"F\\xFCgt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" als letzten Kindknoten des Knoten ein (und gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" zur\\xFCck)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"insertBefore(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \", \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"reference\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"F\\xFCgt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" vor dem \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"reference\"), \" Kindknoten des Knoten ein (und gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" zur\\xFCck)\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let hallo: HTMLElement = document.createElement(\\\"p\\\");\\nhallo.textContent = \\\"Hallo\\\";\\ndocument.body.appendChild(hallo);\\nlet hallo2 = hallo.cloneNode();\\nhallo2.textContent = \\\"Hallo2\\\";\\nhallo2.setAttribute(\\\"style\\\", \\\"color: green\\\");\\ndocument.body.insertBefore(hallo2, hallo);\\n\")), mdx(\"h3\", null, \"DOM Knoten l\\xF6schen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Node Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"removeChild(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"L\\xF6scht \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" als Kind des Knoten (und gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" zur\\xFCck)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"replaceChild(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"replacement\"), \", \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Ersetzt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" als Kind des Knoten durch \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"replacement\"), \" (und gibt \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"node\"), \" zur\\xFCck)\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<html lang=\\\"de\\\">\\n  <head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title>Titel der Seite</title>\\n  </head>\\n  <body>\\n    <p>Text1</p>\\n    <p>Text2</p>\\n  </body>\\n</html>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"document.body.removeChild(document.getElementsByTagName(\\\"p\\\")[0]);\\n\")), mdx(\"h3\", null, \"Browser Kompatibilit\\xE4t\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Teilweise mehrere Methoden mit \\xE4hnlicher Funktionalit\\xE4t\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xDCberpr\\xFCfen welche Eigenschaften / Methoden in welchen Browsern genutzt werden k\\xF6nnen\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. \\xFCber die Seite \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://caniuse.com/\"\n  }, \"https://caniuse.com/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Beispiel: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://caniuse.com/mdn-api_node_appendchild\"\n  }, \"appendChild\"), \" vs. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://caniuse.com/mdn-api_element_append\"\n  }, \"append\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ggf. Geschwindigkeitsunterschiede pr\\xFCfen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ggf. Sicherheit pr\\xFCfen (siehe \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Element/innerHTML#sicherheits%C3%BCberlegungen\"\n  }, \"innerHtml\"), \")\")), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://wiki.selfhtml.org/wiki/HTML/Attribute/data-*\"\n  }, \"Data Attribute\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zus\\xE4tzliche versteckte Informationen an HTML Element anheften\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attribut mit selbst definiertem Namen, der mit \\\"data-\\\" beginnt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann auch in CSS verwendet werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann im Skript per getAttribute/setAttribute ausgelesen/gesetzt werden, oder \\xFCber die Eigenschaft \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dataset\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div id=\\\"1\\\" data-article-nr=\\\"123\\\" data-in-stock=\\\"true\\\">Hose</div>\\n<div id=\\\"2\\\" data-article-nr=\\\"456\\\" data-in-stock=\\\"false\\\">Hemd</div>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"[data-in-stock=\\\"false\\\"] {\\n  text-decoration: line-through;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let article: Element = document.getElementById(\\\"1\\\");\\nconsole.log(article.dataset.articleNr);\\nconsole.log(article.dataset.inStock);\\nconsole.log(article.getAttribute(\\\"data-article-nr\\\"));\\n\")), mdx(\"h1\", null, \"window\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"das \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"window\"), \" Objekt beinhaltet Informationen \\xFCber das Browserfenster, in dem es aufgerufen wird\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"alle globalen Variablen werden an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"window\"), \" angeheftet und k\\xF6nnen auch ohne \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"window.\"), \" davor aufgerufen werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bietet z. B. Zugriff auf:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localStorage\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sessionStorage\"), \": lokale Daten Speicherung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scrollX\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scrollY\"), \": Scroll-Position\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"innerWidth\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"innerHeight\"), \": Gr\\xF6\\xDFe des Content Bereichs im Fenster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"location\"), \": aktuelle URL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"screen\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"screenX\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"screenY\"), \": Informationen zum Bildschirm und Fenster Position auf dem Bildschirm\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"console.log(window);\\nconsole.log(window.location);\\nconsole.log(location); // ohne window\\nconsole.log(innerWidth);\\nconsole.log(innerHeight);\\nconsole.log(screenX);\\nconsole.log(screenY);\\n\")), mdx(\"h1\", null, \"Event Beispiel\"), mdx(\"p\", null, \"Erm\\xF6glicht Code, der nicht sofort ausgef\\xFChrt werden soll, sondern erst, wenn ein bestimmtes Ereignis auftritt, z. B. ein Klick.\"), mdx(\"p\", null, \"Beispiel:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div id=\\\"box\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#box {\\n  background-color: black;\\n  width: 100px;\\n  height: 50px;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let box: HTMLElement = document.getElementById(\\\"box\\\");\\nbox.addEventListener(\\\"click\\\", changeBGColor);\\nfunction changeBGColor(event: Event): void {\\n  let randomColor: string = Math.floor(Math.random() * 0xffffff).toString(16);\\n  event.currentTarget.setAttribute(\\n    \\\"style\\\",\\n    `background-color: #${randomColor}`\\n  );\\n}\\n\")), mdx(\"p\", null, \"Vorgehen:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mit der Funktion \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"addEventListener\"), \" vermerken, auf welche Art von Event wie reagiert werden soll\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"welche Art von Event: z. B. das \\\"click\\\" Event\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wie reagiert werden: z. B. mit der \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"changeBGColor\"), \" Methode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wenn das Event Auftritt, wird die Methode aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Informationen zum Event werden an die Methode \\xFCbergeben\")), mdx(\"h1\", null, \"Events (Ereignisse)\"), mdx(\"p\", null, \"Begriffe:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event\"), \" ist das Ereignis das auftritt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Target\"), \" ist das DOM Objekt, f\\xFCr welches ein \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event\"), \" behandelt werden soll.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Handler\"), \" ist die Funktion, die beim Auftreten des Events am Event Target ausgef\\xFChrt werden soll.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Event Listener\"), \" wird beim Event Target angelegt, um beim Auftreten des Events den Handler aufrufen zu k\\xF6nnen.\")), mdx(\"p\", null, \"Beispiel:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let box: HTMLElement = document.getElementById(\\\"box\\\");\\nbox.addEventListener(\\\"click\\\", changeBGColor);\\nfunction changeBGColor(event: Event): void {\\n  let randomColor: string = Math.floor(Math.random() * 0xffffff).toString(16);\\n  event.currentTarget.setAttribute(\\n    \\\"style\\\",\\n    `background-color: #${randomColor}`\\n  );\\n}\\n\")), mdx(\"h3\", null, \"Event registrieren\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"eventTarget.addEventListener(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \": string, \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \": Function)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"tritt Event vom Typ \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \" bei \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"eventTarget\"), \" auf, wird die \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \" Funktion aufgerufen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"eventTarget.removeEventListener(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \": string, \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \": Function)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"tritt Event vom Typ \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"type\"), \" bei \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"eventTarget\"), \" auf, wird die \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"handler\"), \" Funktion \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nicht mehr\"), \" aufgerufen\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eventTarget kann z. B. window, document, DOMElement sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mehrere Listener (auch gleicher Typ aber unterschiedlicher Handler) f\\xFCrs gleiche eventTarget m\\xF6glich\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hinweis: inline event handler \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"nicht verwenden\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<div onclick=\\\"handlerFunction Code\\\"/>\"), \", bzw. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eventTarget.onclick\"), \"), da weder mehrere Handler, noch remove m\\xF6glich\")), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/Events\"\n  }, \"Arten von Events\")), mdx(\"p\", null, \"Es gibt verschiedene Events (Event und Kindklassen von Event), die ausgel\\xF6st werden k\\xF6nnen, z. B.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event (load, scroll, input, submit)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MouseEvent (click, mouseover); KeyboardEvent (keydown)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UIEvent (resize)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FokusEvent (focus, blur)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"weitere: DeviceMotionEvent, ErrorEvent, ...\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts\"\n  }, \"https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts\"), \" -> nach \\\"GlobalEventHandlersEventMap\\\" suchen\"), mdx(\"h3\", null, \"Event Informationen\"), mdx(\"p\", null, \"Beim Aufruf der Handler Funktion wird ein Event Objekt \\xFCbergeben, mit Informationen \\xFCber das Event, z. B.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eigenschaft\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"currentTarget\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EventTarget, an dem die handler Funktion registriert wurde\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"target\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DOM Objekt, an dem das Event aufgetreten ist (siehe bubbling)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Art von Event\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts\"\n  }, \"https://github.com/microsoft/TypeScript/blob/main/lib/lib.dom.d.ts\"), \" -> nach \\\"interface Event\\\" suchen\"), mdx(\"h1\", null, \"Funktionsweise von Events\"), mdx(\"p\", null, \"Pseudocode:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"class EventTarget {\\n  listener = [];\\n  function addEventListener(type, handlerFkt){\\n    listener.push({type, handlerFkt});\\n  }\\n  function onEvent(type, eventInfos){\\n    foreach(l in listener){\\n      if(l.type == type){\\n        l.handlerFkt(eventInfos)\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"das \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"EventTarget\"), \" stellt Funktionalit\\xE4t zum Behandeln von Events zur Verf\\xFCgung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"onEvent\"), \" wird von der JavaScript Engine aufgerufen, wenn das entsprechende Event auftritt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Handler, die sich f\\xFCr das Ereignis registriert haben (per addEventListener), werden aufgerufen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dem Handler werden Informationen \\xFCber das Event in Form eines Objektes \\xFCbergeben\")), mdx(\"h3\", null, \"Event Queue\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alle Events, f\\xFCr die Handler Funktionen am Event Target registriert wurden, werden in eine Warteschlange eingereiht, wenn das Event auftritt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Die Warteschlange wird der Reihenfolge nach abgearbeitet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop\"\n  }, \"weitere Details\"))), mdx(\"h1\", null, \"capturing and bubbling (Einfangen und Blubbern)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tritt ein Event an einem Event Target auf, so k\\xF6nnen auch die Eltern Elemente im DOM Baum darauf reagieren.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Von der Reihenfolge kann erst der Handler der Eltern, oder der des Targets aufgerufen werden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Um beide Reihenfolgen zu erm\\xF6glichen startet das Event bei der Wurzel und l\\xE4uft durch bis zum Target (Capturing) und zur\\xFCck zur Wurzel (Bubbling).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Je nach Einstellung wird es schon beim Capturing (muss explizit bei addEventListener angegeben werden) oder erst beim Bubbling (Default Einstellung) behandelt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalerweise wird also erst die Handler Funktion des Targets ausgef\\xFChrt, dann die der Eltern des Targets, und zum Schluss die der Wurzel (bzw. dar\\xFCber noch document und window).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eventObjekt.stopPropagation()\"), \" f\\xFChrt dazu, dass das Event nicht mehr weitergereicht wird (kann unerw\\xFCnschtes Verhalten verhindern).\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3.org/TR/uievents/#event-flow\"\n  }, \"Grafik\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div id=\\\"box\\\"><button>Click me</button></div>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#box {\\n  background-color: green;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let box: HTMLElement = document.getElementById(\\\"box\\\");\\nbox.addEventListener(\\\"click\\\", divHi); // bubbling\\n// box.addEventListener(\\\"click\\\", divHi, true); // capturing\\nfunction divHi(event: Event): void {\\n  console.log(\\\"div: Hi\\\");\\n  console.log(event.currentTarget);\\n  console.log(event.target);\\n}\\nlet button: HTMLElement = document.getElementsByTagName(\\\"button\\\")[0];\\nbutton.addEventListener(\\\"click\\\", buttonHi);\\nfunction buttonHi(event: Event): void {\\n  console.log(\\\"button: Hi\\\");\\n  // event.stopPropagation();\\n}\\n\")), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Canvas_API/Tutorial\"\n  }, \"Canvas\")), mdx(\"p\", null, \"Mit Typescript auf ein Canvas HTML Element zeichnen (Formen, Pfade, Text, Bilder, etc.):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Canvas Element in HTML anlegen und id vergeben\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Typescript \\xFCber DOM Funktionen auf Canvas zugreifen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xFCber 'getContext' des Canvas ein Context Objekt mit Methoden zum Zeichnen in Typescript erhalten, z. B.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f\\xFCr 2D: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getContext(\\\"2d\\\")\"), \" -> \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\"\n  }, \"CanvasRenderingContext2D\"), \" Objekt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f\\xFCr 3D Zeichnungen: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getContext(\\\"webgl\\\")\"), \" -> \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext\"\n  }, \"WebGLRenderingContext\"), \" Objekt\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zeichenmethoden des Context Objekts zum Zeichnen nutzen, z. B.\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichen Eigenschaft/Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fillStyle\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"strokeStyle\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSS Farbwert, Verlauf, oder Muster f\\xFCr F\\xFCllung oder Striche\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fillRect(x, y, breite, h\\xF6he)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rechteck zeichnen und mit aktuellem \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fillStyle\"), \" f\\xFCllen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"strokeRect(x, y, breite, h\\xF6he)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rechteckrahmen zeichnen mit aktuellem \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"strokeStyle\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"clearRect(x, y, breite, h\\xF6he)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rechteckigen Bereich transparent machen\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pfad Objekte anlegen (Path2D), beliebige Form beschreiben und mit \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Context Objekt\"), \" zeichnen, z. B. \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-pfaddirektzeichnen\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-pfaddirektzeichnen\",\n    \"className\": \"footnote-ref\"\n  }, \"pfaddirektzeichnen\")))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichen Eigenschaft/Methode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"beginPath()\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Neuen Pfad mit neuem Style beginnen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"moveTo(x, y)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cursor ohne zu Zeichnen zu \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"x\"), \"/\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"y\"), \" bewegen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lineTo(x, y)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cursor nach \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"x\"), \"/\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"y\"), \" bewegen und dabei Linie zeichnen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"arc(x, y, radius, startWinkel, endWinkel, gegenUhrzeigersinn=false)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cursor im Kreis um \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"x\"), \"/\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"y\"), \" mit \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"radius\"), \" bewegen von \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"start\"), \" zu \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"endWinkel\"), \" (Bogenma\\xDF) in angegebene Richtung und dabei Bogen zeichnen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"closePath()\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"optional, zum Anfangspunkt zur\\xFCck zeichnen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"stroke(path)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Kontur des Pfads mit aktuellem \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"strokeStyle\"), \" zeichnen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fill(path)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Pfad mit aktuellem \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"fillStyle\"), \" f\\xFCllen\")))), mdx(\"p\", null, \"Hinweis: Koordinatensystem mit 0/0 links oben, x-Achse nach rechts, y-Achse nach unten\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<canvas id=\\\"myCanvas\\\" width=\\\"300\\\" height=\\\"150\\\"></canvas>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"myCanvas\\\")\\n);\\nlet ctx: CanvasRenderingContext2D = canvas.getContext(\\\"2d\\\");\\n\\nctx.fillStyle = \\\"blue\\\";\\nctx.fillRect(50, 30, 60, 40);\\nctx.strokeStyle = \\\"rgb(255,0,0)\\\";\\nctx.strokeRect(40, 20, 20, 80);\\nctx.clearRect(70, 40, 5, 5);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"myCanvas\\\")\\n);\\nlet ctx: CanvasRenderingContext2D = canvas.getContext(\\\"2d\\\");\\n\\n// mit Path2D Objekt\\nlet path: Path2D = new Path2D();\\npath.moveTo(30, 30);\\npath.lineTo(70, 90);\\npath.lineTo(70, 50);\\npath.closePath();\\n\\nctx.fillStyle = \\\"green\\\";\\nctx.fill(path);\\nctx.stroke(path);\\n\\n// ohne Path2D Objekt\\nctx.arc(100, 110, 30, 0, Math.PI, true);\\nctx.fill();\\n\")), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API\"\n  }, \"https://developer.mozilla.org/de/docs/Web/API\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://caniuse.com/\"\n  }, \"https://caniuse.com/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Event/Ereignisbehandlung\"\n  }, \"https://wiki.selfhtml.org/wiki/JavaScript/DOM/Event/Ereignisbehandlung\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\"\n  }, \"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-createtextnode\"\n  }, \"Alternativ mit document.createTextNode(\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"text\"), \") ein neues \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Text\"), \" Objekt anlegen und mit appendChild(\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"textObject\"), \") in den DOM einbinden.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-createtextnode\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-createattribute\"\n  }, \"Alternativ mit document.createAttribute(\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"attributName\"), \") ein neues \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Attr\"), \" Objekt anlegen und mit setAttributeNode(\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"attrObject\"), \") in den DOM einbinden.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-createattribute\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-pfaddirektzeichnen\"\n  }, \"Pfade k\\xF6nnen auch direkt auf den Canvas gezeichnet werden, ohne in einem Path2D Objekt gespeichert zu werden.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-pfaddirektzeichnen\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"DOM und Events","date":"08 November, 2021"}}},"pageContext":{"id":"bef2bfb0-d581-5606-9a00-de8d6284c126","heading":{"value":"window","depth":1},"index":6,"prevSlug":"/lecture/dom-events/5","nextSlug":"/lecture/dom-events/7"}},
    "staticQueryHashes": ["170874137"]}