{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/json-localStorage/1",
    "result": {"data":{"mdx":{"id":"0c7be815-6b33-5c2b-93e4-25f87ddb39d9","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JSON und localStorage\",\n  \"date\": \"2021-11-15T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Datenspeicherung im Browser (Client-seitig)\"), mdx(\"p\", null, \"Bedarf zur lokalen Speicherung von Daten:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP Protokoll ist \\\"stateless\\\" (Zustandslos); Anfragen sind unabh\\xE4ngig voneinander und teilen keine Informationen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mehrere Anfragen m\\xF6glich, ohne dass sich der Server an einen User und dessen Interaktion erinnern muss\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Es k\\xF6nnen aber Daten auf der User Seite gespeichert werden und bei Anfragen mitgesendet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server kann den User \\xFCber diese Daten tracken (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Datenschutz-Grundverordnung\"\n  }, \"DSGVO\"), \" bei personenbezogenen Daten ber\\xFCcksichtigen)\")), mdx(\"p\", null, \"Speicherung in lokalen Dateien nicht m\\xF6glich:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript hat nur durch User Interaktion Zugriff auf lokale Dateien des Rechners \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-localfileaccess\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-localfileaccess\",\n    \"className\": \"footnote-ref\"\n  }, \"localfileaccess\")))), mdx(\"p\", null, \"Speicherm\\xF6glichkeiten in der Browser Anwendung (offline verf\\xFCgbar): \", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-browsercache\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-browsercache\",\n    \"className\": \"footnote-ref\"\n  }, \"browsercache\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Cookies\"), \" (einzelne Informationen, wenige KB)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Web Storage\"), \": Session Storage, Local Storage (Zugriff synchron, ca. 5MB Speicher)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Datenbanken\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/IndexedDB_API\"\n  }, \"IndexedDB\"), \" (Zugriff asynchron, f\\xFCr gro\\xDFe Datenmengen, API komplizierter, nicht von allen Browsern unterst\\xFCtzt, Datenbankfunktionalit\\xE4t) \", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-websql\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-websql\",\n    \"className\": \"footnote-ref\"\n  }, \"websql\")))), mdx(\"p\", null, \"-> In Google Chrome einsehbar unter der Entwicklungsumgebung im Application Tab\"), mdx(\"h1\", null, \"Cookies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kleinere Informationen, z. B. zur Authentifizierung des Users (wenig Speicherplatz vorgesehen, ca. 4 KB f\\xFCr ca. 20 Cookies pro Seite)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werden automatisch bei jedem Request mit an den Server gesendet (Teil des HTTP Protokolls)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cookie besteht aus key/value Paar mit zus\\xE4tzlichen optionalen Informationen, z. B.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"path: default aktueller Pfad; Cookie steht f\\xFCr Pfad und alle Unterseiten zur Verf\\xFCgung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"expires / max-age: default Cookie beim Schlie\\xDFen des Browsers l\\xF6schen; kann auf ein Datum oder auf Anzahl Sekunden gesetzt werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sicherheitsrelevante Optionen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werden meist vom Server gesendet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xF6nnen aber auch \\xFCber JavaScript bearbeitet werden (au\\xDFer bei httpOnly Cookie Option)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"document.cookie = \\\"key=value; option1; option2\\\";\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-TypeScript\",\n    \"metastring\": \"Code\",\n    \"Code\": true\n  }, \"document.cookie = \\\"username=Smith\\\";\\ndocument.cookie = \\\"addsAbout=pets; expires=Tue, 15 Mar 2022 12:00:00 UTC; path=/\\\";\\nconsole.log(document.cookie);\\n\")), mdx(\"h1\", null, \"Storage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speichern von key - value Paaren, beide als Strings (Tabelle mit zwei Spalten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zwei verschiedene Speicherbereiche: Local und Session Storage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zum Speichern von nicht essenziellen oder wiederherstellbaren Daten\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Einstellungen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten die vom Server geholt und lokal vorgehalten werden (z. B. f\\xFCr Offline Nutzung)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"erst seit HTML5\")), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Window/sessionStorage\"\n  }, \"Session Storage\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zugriff: window.sessionStorage (Storage Objekt)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nur w\\xE4hrend Browser Sitzung (Session) verf\\xFCgbar\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten werden mit Ende der Sitzung gel\\xF6scht\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bleibt erhalten bei Reload der Seite\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wird gel\\xF6scht beim Schlie\\xDFen des Browsers oder Tabs oder \\xD6ffnen in neuem Tab\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann vom User gel\\xF6scht werden\")))), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://developer.mozilla.org/de/docs/Web/API/Window/localStorage\"\n  }, \"Local Storage\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Zugriff: window.localStorage (Storage Objekt)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"permanente Speicherung (kein Verfallsdatum)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bleibt erhalten bei Reload der Seite, oder Schlie\\xDFen des Browsers/Tabs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kann vom User gel\\xF6scht werden\")))), mdx(\"h3\", null, \"Funktionen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"setItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \", \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Neuer Eintrag mit \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" und \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \", bzw. Eintrag anpassen, wenn \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" schon vorhanden\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"getItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"value\"), \" f\\xFCr den angegebenen \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" abrufen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"removeItem(\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag mit dem angegebenen \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"key\"), \" l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"clear()\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Alle Eintr\\xE4ge im Store l\\xF6schen\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"localStorage.setItem(\\\"username\\\", \\\"Mr. X\\\");\\nsessionStorage.setItem(\\\"username\\\", \\\"Mrs. Y\\\");\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"console.log(localStorage.getItem(\\\"username\\\"));\\nconsole.log(sessionStorage.getItem(\\\"username\\\"));\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"localStorage.clear();\\nsessionStorage.clear();\\n\")), mdx(\"p\", null, \"Alle keys ausgeben lassen (mit \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"length\"), \" und \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"key\"), \" Funktion f\\xFCr \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Storage\"), \" Objekte):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"for (let i: number = 0; i < localStorage.length; i++) {\\n  console.log(localStorage.key(i));\\n}\\n\")), mdx(\"h1\", null, \"Storage Events\"), mdx(\"p\", null, \"Auf \\xC4nderungen in einem anderen Browserfenster/-tab reagieren (funktioniert nicht f\\xFCr sessionStorage, da an Tab gebunden)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function storeChange(e: Event): void {\\n  console.log(e);\\n}\\nwindow.addEventListener(\\\"storage\\\", storeChange);\\n\")), mdx(\"h1\", null, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"https://www.json.org/json-de.html\"\n  }, \"JSON (JavaScript Object Notation)\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript Objekt als Text (String) darstellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"unabh\\xE4ngig von Programmiersprachen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"standardisierte Vorgabe, wie Objektdaten notiert werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zur Speicherung oder Austausch von Objektdaten (z. B. Verwendung in localStorage, Requests)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1997 von \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=-C-JoyNuQJs\"\n  }, \"Douglas Crockford spezifiziert\"), \" (schlichtere Alternative zu XML)\")), mdx(\"h3\", null, \"Aufbau\"), mdx(\"p\", null, \"zwei Strukturen (finden sich in den meisten Programmiersprachen):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name/Wert Paare (entspricht JavaScript Object)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"name\\\": wert\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mehrere getrennt durch Komma\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wert: string, zahl, true, false, Object, Array, null\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umschlossen mit geschweiften Klammern {}\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liste (entspricht JavaScript Array)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werte getrennt durch Komma\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umschlossen mit eckigen Klammern []\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"Anna\\\",\\n  \\\"alter\\\": 23\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"[\\\"Anna\\\", \\\"Ben\\\"]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"name\\\": \\\"Lasagne\\\",\\n  \\\"zutaten\\\": [\\n    {\\n      \\\"name\\\": \\\"Tomatensauce\\\",\\n      \\\"menge\\\": 500,\\n      \\\"einheit\\\": \\\"ml\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Nudelplatten\\\",\\n      \\\"menge\\\": 8,\\n      \\\"einheit\\\": \\\"St\\xFCck\\\"\\n    }\\n  ],\\n  \\\"zubereitungszeit\\\": 120\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://json.parser.online.fr/\"\n  }, \"JSON Parser Online\")), mdx(\"h1\", null, \"JavaScript Literal Objekt Schreibweise\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript Objekte k\\xF6nnen mit der gleichen Schreibweise im Code direkt definiert werden (ohne \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new\"), \"), aber ohne Funktionen (interface, oder class ohne Methoden)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hochkommas um die Eigenschafts-Bezeichner (Name von Name/Wert Paar) weglassen\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"interface Person {\\n  name: string;\\n  alter: number;\\n}\\n\\nlet p: Person = { name: \\\"Anna\\\", alter: 23 };\\nconsole.log(p);\\n\\nlet gruppe: [Person] = [\\n  { name: \\\"Anna\\\", alter: 23 },\\n  { name: \\\"Oliver\\\", alter: 22 },\\n  { name: \\\"Peter\\\", alter: 21 },\\n];\\nfor (let m of gruppe) {\\n  console.log(m.name);\\n}\\n\")), mdx(\"h1\", null, \"JSON Konvertierung\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Bedeutung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"JSON.stringify(objectRef)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Objekt in String wandeln\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"JSON.parse(jsonString)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"String in Objekt wandeln\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"interface Person {\\n  name: string;\\n  alter: number;\\n}\\n\\nlet p: Person = { name: \\\"Anna\\\", alter: 23 };\\n\\nlet pAsJson = JSON.stringify(p);\\nconsole.log(pAsJson);\\n\\nlet pParsedBack = JSON.parse(pAsJson);\\nconsole.log(pParsedBack);\\n\")), mdx(\"p\", null, \"Vorgehen, wenn nicht nur Daten von Objekten, sondern auch Methoden wiederhergestellt werden sollen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"class Person {\\n  name: string;\\n  alter: number;\\n\\n  constructor(name: string, alter: number) {\\n    this.name = name;\\n    this.alter = alter;\\n  }\\n\\n  print(): void {\\n    console.log(`Hallo ich bin ${this.name}`);\\n  }\\n}\\n\\nlet p: Person = new Person(\\\"Anna\\\", 23);\\n\\nlet pAsJson = JSON.stringify(p);\\nlet pParsedBack = JSON.parse(pAsJson);\\n\\n// funktioniert nicht:\\n// pParsedBack.print();\\n\\nlet p2: Person = { name: \\\"Anna\\\", alter: 23 };\\n// funktioniert auch nicht:\\n// p2.print();\\n\\n// funktioniert:\\nlet pAsObject: Person = new Person(pParsedBack.name, pParsedBack.alter);\\npAsObject.print();\\n\\nconsole.log(pParsedBack);\\nconsole.log(pAsObject);\\n\")), mdx(\"h1\", null, \"Beispielanwendung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anwendung bisheriger Themen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"farbige Kreise durch Klick auf Canvas zeichnen und speichern\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<input id=\\\"color\\\" type=\\\"color\\\" />\\n<canvas id=\\\"canvas\\\" width=\\\"300px\\\" , height=\\\"200px\\\" />\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"#canvas {\\n  border: 1px solid;\\n}\\n\")), mdx(\"details\", null, mdx(\"summary\", null, \"1. Schritt: Bei Klick auf Canvas farbigen Kreis zeichnen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"let canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"canvas\\\")\\n);\\ncanvas.addEventListener(\\\"click\\\", drawDot);\\nfunction drawDot(event: MouseEvent): void {\\n  let color: HTMLInputElement = <HTMLInputElement>(\\n    document.getElementById(\\\"color\\\")\\n  );\\n  let canvas: HTMLCanvasElement = <HTMLCanvasElement>event.currentTarget;\\n  let ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n    canvas.getContext(\\\"2d\\\")\\n  );\\n  let x: number = event.x - canvas.offsetLeft;\\n  let y: number = event.y - canvas.offsetTop;\\n  ctx.fillStyle = color.value;\\n  ctx.beginPath();\\n  ctx.moveTo(x, y);\\n  ctx.arc(x, y, 10, 0, 2 * Math.PI);\\n  ctx.fill();\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"2. Schritt: Code f\\xFCr Kreise in Klasse auslagern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"class Dot {\\n  private x: number;\\n  private y: number;\\n  private color: string;\\n\\n  constructor(x: number, y: number, color: string) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx: CanvasRenderingContext2D): void {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nlet canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"canvas\\\")\\n);\\ncanvas.addEventListener(\\\"click\\\", drawDot);\\nfunction drawDot(event: MouseEvent): void {\\n  let color: HTMLInputElement = <HTMLInputElement>(\\n    document.getElementById(\\\"color\\\")\\n  );\\n  let canvas: HTMLCanvasElement = <HTMLCanvasElement>event.currentTarget;\\n  let ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n    canvas.getContext(\\\"2d\\\")\\n  );\\n  let x: number = event.x - canvas.offsetLeft;\\n  let y: number = event.y - canvas.offsetTop;\\n  let newDot: Dot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"3. Schritt: Gezeichnete Kreise in localStorage speichern:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"class Dot {\\n  private x: number;\\n  private y: number;\\n  private color: string;\\n\\n  constructor(x: number, y: number, color: string) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx: CanvasRenderingContext2D): void {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nclass Dots {\\n  private static dots: Dot[] = [];\\n  static loadDots() {\\n    let dotsJSON: string = localStorage.getItem(\\\"dots\\\") || \\\"[]\\\";\\n    for (let dot of JSON.parse(dotsJSON)) {\\n      this.dots[this.dots.length] = new Dot(dot.x, dot.y, dot.color);\\n    }\\n  }\\n  static drawDots(ctx: CanvasRenderingContext2D) {\\n    for (let dot of this.dots) {\\n      dot.draw(ctx);\\n    }\\n  }\\n  static storeDot(dot: Dot): void {\\n    this.dots[this.dots.length] = dot;\\n    localStorage.setItem(\\\"dots\\\", JSON.stringify(this.dots));\\n  }\\n}\\n\\nlet canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"canvas\\\")\\n);\\nlet ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n  canvas.getContext(\\\"2d\\\")\\n);\\nDots.loadDots();\\nDots.drawDots(ctx);\\ncanvas.addEventListener(\\\"click\\\", drawDot);\\nfunction drawDot(event: MouseEvent): void {\\n  let color: HTMLInputElement = <HTMLInputElement>(\\n    document.getElementById(\\\"color\\\")\\n  );\\n  let canvas: HTMLCanvasElement = <HTMLCanvasElement>event.currentTarget;\\n  let ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n    canvas.getContext(\\\"2d\\\")\\n  );\\n  let x: number = event.x - canvas.offsetLeft;\\n  let y: number = event.y - canvas.offsetTop;\\n  let newDot: Dot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n  Dots.storeDot(newDot);\\n}\\n\"))), mdx(\"details\", null, mdx(\"summary\", null, \"4. Schritt: Alle Kreise \\xFCber zus\\xE4tzlichen Button l\\xF6schen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"class Dot {\\n  private x: number;\\n  private y: number;\\n  private color: string;\\n\\n  constructor(x: number, y: number, color: string) {\\n    this.x = x;\\n    this.y = y;\\n    this.color = color;\\n  }\\n\\n  draw(ctx: CanvasRenderingContext2D): void {\\n    ctx.fillStyle = this.color;\\n    ctx.beginPath();\\n    ctx.moveTo(this.x, this.y);\\n    ctx.arc(this.x, this.y, 10, 0, 2 * Math.PI);\\n    ctx.fill();\\n  }\\n}\\n\\nclass Dots {\\n  private static dots: Dot[] = [];\\n  static loadDots() {\\n    let dotsJSON: string = localStorage.getItem(\\\"dots\\\") || \\\"[]\\\";\\n    for (let dot of JSON.parse(dotsJSON)) {\\n      this.dots[this.dots.length] = new Dot(dot.x, dot.y, dot.color);\\n    }\\n  }\\n  static drawDots(ctx: CanvasRenderingContext2D) {\\n    for (let dot of this.dots) {\\n      dot.draw(ctx);\\n    }\\n  }\\n  static storeDot(dot: Dot): void {\\n    this.dots[this.dots.length] = dot;\\n    localStorage.setItem(\\\"dots\\\", JSON.stringify(this.dots));\\n  }\\n  static clearDots(): void {\\n    this.dots = [];\\n    localStorage.removeItem(\\\"dots\\\");\\n  }\\n}\\n\\nlet canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n  document.getElementById(\\\"canvas\\\")\\n);\\nlet ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n  canvas.getContext(\\\"2d\\\")\\n);\\nDots.loadDots();\\nDots.drawDots(ctx);\\ncanvas.addEventListener(\\\"click\\\", drawDot);\\nfunction drawDot(event: MouseEvent): void {\\n  let color: HTMLInputElement = <HTMLInputElement>(\\n    document.getElementById(\\\"color\\\")\\n  );\\n  let canvas: HTMLCanvasElement = <HTMLCanvasElement>event.currentTarget;\\n  let ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n    canvas.getContext(\\\"2d\\\")\\n  );\\n  let x: number = event.x - canvas.offsetLeft;\\n  let y: number = event.y - canvas.offsetTop;\\n  let newDot: Dot = new Dot(x, y, color.value);\\n  newDot.draw(ctx);\\n  Dots.storeDot(newDot);\\n}\\n\\nlet clearButton: HTMLElement = document.createElement(\\\"button\\\");\\nclearButton.textContent = \\\"X\\\";\\ncanvas.parentNode?.insertBefore(clearButton, canvas);\\nclearButton.addEventListener(\\\"click\\\", Dots.clearDots);\\nclearButton.addEventListener(\\\"click\\\", clearCanvas);\\n\\nfunction clearCanvas(event: Event): void {\\n  let canvas: HTMLCanvasElement = <HTMLCanvasElement>(\\n    document.getElementById(\\\"canvas\\\")\\n  );\\n  let ctx: CanvasRenderingContext2D = <CanvasRenderingContext2D>(\\n    canvas.getContext(\\\"2d\\\")\\n  );\\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\\n}\\n\"))), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://diveintohtml5.info/storage.html\"\n  }, \"http://diveintohtml5.info/storage.html\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://javascript.info/data-storage\"\n  }, \"https://javascript.info/data-storage\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://nolanlawson.com/2015/09/29/indexeddb-websql-localstorage-what-blocks-the-dom/\"\n  }, \"https://nolanlawson.com/2015/09/29/indexeddb-websql-localstorage-what-blocks-the-dom/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.derinformatikstudent.de/was-informatiker-ueber-datenschutz-wissen-sollten/\"\n  }, \"https://www.derinformatikstudent.de/was-informatiker-ueber-datenschutz-wissen-sollten/\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-localfileaccess\"\n  }, \"Ausnahme z. B. bei expliziten, sicherheitskritischen Einstellungen im Chrome Browser: --allow-file-access-from-files\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-localfileaccess\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-browsercache\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://de.wikipedia.org/wiki/Browser-Cache\"\n  }, \"Browser Cache\"), \": Puffer Speicher von Ressourcen im Browser; keine explizite Daten-Speicherung\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-browsercache\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-websql\"\n  }, \"Alternative \\\"Web SQL\\\" wurde nicht von W3C standardisiert.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-websql\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"JSON und localStorage","date":"15 November, 2021"}}},"pageContext":{"id":"0c7be815-6b33-5c2b-93e4-25f87ddb39d9","heading":{"value":"Datenspeicherung im Browser (Client-seitig)","depth":1},"index":1,"prevSlug":"/lecture/json-localStorage/0","nextSlug":"/lecture/json-localStorage/2"}},
    "staticQueryHashes": ["170874137"]}