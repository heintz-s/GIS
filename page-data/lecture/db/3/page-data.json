{
    "componentChunkName": "component---src-components-lecture-page-layout-js",
    "path": "/lecture/db/3",
    "result": {"data":{"mdx":{"id":"f8d7dcb5-9a7f-5fe4-a96b-762d56d0eade","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Grundlagen Datenbanken\",\n  \"date\": \"2022-05-19T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar SQLTable = makeShortcode(\"SQLTable\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Datenbanken\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten verwalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"m\\xF6gliche Anforderungen:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gro\\xDFe Menge an Daten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"schneller Zugriff\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"paralleler Zugriff von mehreren Nutzern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konsistenz (Korrektheit der Daten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sicherheit (Schutz vor unbefugtem Zugriff)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datenbankmanagementsystem (DBMS): Software, die den Zugriff auf Daten regelt\")), mdx(\"p\", null, \"CRUD- Operationen\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Delete\")), mdx(\"p\", null, \"Transaktionen\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bestehen aus einer oder mehreren zusammengeh\\xF6rigen Operationen\")), mdx(\"p\", null, \"ACID Eigenschaften\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Atomarit\\xE4t (Abgeschlossenheit): Transaktion muss vollst\\xE4ndig erfolgreich abgeschlossen sein -> sonst Rollback (urspr\\xFCnglicher Zustand wiederherstellen) -> z. B. Abbuchung ohne Auszahlung verhindern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konsistenzerhaltung: Daten m\\xFCssen (entsprechend festgelegten Regeln) nach Transaktion weiter korrekt sein -> z. B. nicht unterschiedliche Schreibweise f\\xFCr gleiche Information\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isolation (Abgrenzung): parallele Zugriffe m\\xFCssen zum gleichen Ergebnis f\\xFChren wie serielle (z. B. durch Sperrvermerk) -> z. B. Doppelbuchungen verhindern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dauerhaftigkeit: Daten\\xE4nderungen durch erfolgreiche Transaktionen bleiben bestehen -> kein Datenverlust, auch bei Systemausfall -> z. B. Bestellung nach Abschluss sicher gespeichert\")), mdx(\"h1\", null, \"Relationale Datenbanken\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bestehen aus Tabellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle hat Eintr\\xE4ge (in Zeilen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle speichert Auswahl an Eigenschaften f\\xFCr jeden Eintrag (in Spalten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"jeder Eintrag hat einen eindeutigen Schl\\xFCssel (einzelne Eigenschaft, oder Kombination aus Eigenschaften) = Primary Key\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schl\\xFCssel ist oft eine fortlaufende ID\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen k\\xF6nnen \\xFCber den Schl\\xFCssel miteinander verbunden sein (Schl\\xFCssel als Eigenschaft in anderer Tabelle) = Foreign Key\")), mdx(\"h4\", null, \"Beispiel (Schl\\xFCssel unterstrichen):\"), mdx(SQLTable, {\n    title: \"Student\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"MatrikelNr\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Vorname\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Nachname\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Studiengang\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Semester\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"234567\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Verena\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rist\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6\"))))), mdx(SQLTable, {\n    title: \"Veranstaltung\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"C#\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichnen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"))))), mdx(SQLTable, {\n    title: \"Studiengang\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MIB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MKB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"))))), mdx(SQLTable, {\n    title: \"Fakult\\xE4t\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"ID\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"IN\"))))), mdx(SQLTable, {\n    title: \"Belegung\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"Student\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"Veranstaltung\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"))))), mdx(\"h3\", null, \"Normalisierung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datens\\xE4tze auf mehrere Tabellen aufteilen, um Redundanzen zu vermeiden und daraus resultierende Inkonsistenzen (ungleiche Angaben zur gleichen Information)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"erste Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spalte soll immer nur Einzelwert beinhalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Name in Vorname, Nachname aufteilen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zweite Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabelle soll immer nur einen Sachverhalt abbilden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nichtschl\\xFCssel m\\xFCssen von allen Schl\\xFCsseln abh\\xE4ngig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Student und Veranstaltung in getrennte Tabellen,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"da Name, Studiengang, Fakult\\xE4t, Semester nur von MatrikelNr abh\\xE4ngig, nicht von VeranstaltungsId\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"und VeranstName, VeranstFakult\\xE4t nur von VeranstaltungsId abh\\xE4ngig, nicht von MatrikelNr\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verbindung der getrennten Tabellen durch Fremdschl\\xFCssel, z. B. weitere Tabelle f\\xFCr Belegung (MatrikelNr + VerantaltungsId)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dritte Normalform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen sollen nur direkte Abh\\xE4ngigkeiten beinhalten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nichtschl\\xFCssel d\\xFCrfen nicht voneinander abh\\xE4ngig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Studiengang und Fakult\\xE4t in eigene Tabelle, da MatrikelNr -> Studiengang und Studiengang -> Fakult\\xE4t\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-transitiveabh\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-transitiveabh\",\n    \"className\": \"footnote-ref\"\n  }, \"transitiveabh\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gibt noch vierte und f\\xFCnfte Normalform, um weitere Redundanzen zu vermeiden\")), mdx(\"h4\", null, \"Nicht normalisierte Tabelle:\"), mdx(SQLTable, {\n    title: \"Student\",\n    mdxType: \"SQLTable\"\n  }, mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"MatrikelNr\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Studiengang\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fakult\\xE4t\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Semester\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"u\", null, \"VeranstaltungsId\")), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"VeranstName\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"VeranstFakult\\xE4t\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"C#\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"IN\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"123456\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Klaus Meng\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"OMB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeichnen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"234567\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Verena Rist\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MIB\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }))))), mdx(\"h1\", null, \"SQL Basics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL = Structured Query Language (Strukturierte Abfrage Sprache)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sprache zur Verwaltung und zum Zugriff auf relationale Datenbanken\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bekannte Opensource relationale Datenbanken: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.mysql.com/de/\"\n  }, \"MySQL\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mariadb.org/\"\n  }, \"MariaDB\"))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SQL Befehl\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Beschreibung\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE DATABASE db_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank anlegen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DROP DATABASE db_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle anlegen (leere neu anlegen, oder aus existierenden Daten)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ALTER TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle nachtr\\xE4glich ver\\xE4ndern (Spalten hinzuf\\xFCgen, l\\xF6schen, umbenennen)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DROP TABLE table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle l\\xF6schen\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INSERT INTO table_name VALUES (wert1, wert2, ...)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Neuen Eintrag in Tabelle\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT spalten FROM table_name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"einzelne Spalten ausw\\xE4hlen (\", \"*\", \" f\\xFCr alle)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT spalten FROM table_name WHERE spalte=wert\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auswahl filtern (mehrere Bedingungen mit AND und OR verkn\\xFCpfen)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SELECT spalten FROM table_name ORDER BY spalte\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Auswahl sortieren\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPDATE table_name SET spalte=wert WHERE spalte=wert\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag in Tabelle \\xE4ndern\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE FROM table_name WHERE spalte=wert\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Eintrag in Tabelle l\\xF6schen\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/sql/sql_intro.asp\"\n  }, \"weitere\")), mdx(\"h3\", null, \"Beispiel: einzelne Tabelle\"), mdx(\"p\", null, \"Web SQL (veraltet, aber hier zum Testen)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"openDatabase(\\\"mydb\\\", \\\"1.0\\\", \\\"Test DB\\\", 2 * 1024 * 1024);\\n\")), mdx(\"p\", null, \"Google Chrome Entwicklungsumgebung -> Application -> WebSQL -> mydb -> Befehle eingeben (unter Application, nicht Console)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE table_name (\\ncolumn1 datatype constraint,\\ncolumn2 datatype constraint\\n...\\n)\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3schools.com/sql/sql_datatypes.asp\"\n  }, \"Data Types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3schools.com/sql/sql_constraints.asp\"\n  }, \"Constraints\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NOT NULL = muss Wert haben\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UNIQUE = muss einmalig sein\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PRIMARY KEY = NOT NULL + UNIQUE\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FOREIGN KEY = Verkn\\xFCpfung zu PRIMARY KEY von anderer Tabelle\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE student (\\n  studentNr INT PRIMARY KEY,\\n  firstName TEXT,\\n  lastName TEXT,\\n  course TEXT NOT NULL);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"ALTER TABLE student\\nADD semester INT;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"INSERT INTO student VALUES (123, \\\"Klaus\\\", \\\"Meng\\\", \\\"OMB\\\", 2);\\nINSERT INTO student VALUES (456, \\\"Verena\\\", \\\"Rist\\\", \\\"MIB\\\", 6);\\nINSERT INTO student VALUES (789, \\\"Samantha\\\", \\\"Holz\\\", \\\"OMB\\\", 1);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT lastName FROM student;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT firstName, lastName FROM student WHERE course=\\\"OMB\\\";\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT firstName, lastName FROM student WHERE course=\\\"OMB\\\" ORDER BY lastName;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"UPDATE student SET semester=3 WHERE studentNr=123;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"DELETE FROM student WHERE studentNr=789;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"DROP TABLE student\\n\")), mdx(\"h1\", null, \"SQL Joins + View\"), mdx(\"h3\", null, \"Tabellen verbinden:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalisierung: Datens\\xE4tze auf mehrere Tabellen aufteilen, um Redundanzen zu vermeiden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tabellen \\xFCber eine Spalte verbunden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(Foreign key)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xF6nnen beim Abruf zu einer Tabelle zusammengef\\xFChrt werden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(Join)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ergebnis kann als virtuelle Tabelle gespeichert werden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"(View)\"))), mdx(\"h3\", null, \"Foreign key\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Werte in Spalte verweisen auf Primary key von anderer Tabelle\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Constraint, der f\\xFCr Spalte mit angegeben wird\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Befehl: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FOREIGN KEY (spalte) REFERENCES table_name(key)\"))), mdx(\"h3\", null, \"Joins\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Typ\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"INNER JOIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Schnittmenge (nur die Eintr\\xE4ge, f\\xFCr die es einen Eintrag in der gejointen Tabelle gibt)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"LEFT JOIN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle + Schnittmenge (alle Eintr\\xE4ge der Tabelle + soweit vorhanden dazu passende Eintr\\xE4ge der gejointen Tabelle)\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/sql/sql_join.asp\"\n  }, \"gibt noch weitere\")), mdx(\"h3\", null, \"View\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Virtuelle Tabelle mit zusammengef\\xFChrten Daten aus bestehenden Tabellen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"z. B. Erzeugung von Datens\\xE4tzen passend f\\xFCr Anzeige in Anwendung\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Befehl: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CREATE VIEW view_name AS\"), \" + Daten (z. B. durch SELECT ausgew\\xE4hlt)\")), mdx(\"h3\", null, \"Beispiel\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"umgesetzt mit \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.sqlite.org/\"\n  }, \"SQLite\"), \" (einfache SQL Datenbank f\\xFCr Prototypen; besteht aus einer Datei)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sqlitebrowser.org/\"\n  }, \"https://sqlitebrowser.org/\"), \" (Programm zum Zugriff auf SQLite Datenbank -> herunterladen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://webuser.hs-furtwangen.de/~heintzs/gis/hochschule.db\",\n    download: true\n  }, \"hochschule.db\"), \" (SQLite Datenbank-Datei mit Beispieldaten -> Rechtsklick -> Speichern unter)\")), mdx(\"h4\", null, \"INNER JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM student\\nINNER JOIN course ON student.course = course.id;\\n\")), mdx(\"p\", null, \"gleiches Ergebnis:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM course\\nINNER JOIN student ON student.course = course.id;\\n\")), mdx(\"h4\", null, \"LEFT JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT *\\nFROM course\\nLEFT JOIN student ON student.course = course.id;\\n\")), mdx(\"h4\", null, \"verschachtelter JOIN\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT student.studentNr, student.firstName, student.lastName, course.name AS \\\"course\\\", faculty.name AS \\\"faculty\\\"\\nFROM (student\\nINNER JOIN course ON student.course = course.id)\\nINNER JOIN faculty ON course.faculty = faculty.id;\\n\")), mdx(\"h4\", null, \"VIEW\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE VIEW student_data AS\\nSELECT student.studentNr, student.firstName, student.lastName, course.name AS \\\"course\\\", faculty.name AS \\\"faculty\\\"\\nFROM (student\\nINNER JOIN course ON student.course = course.id)\\nINNER JOIN faculty ON course.faculty = faculty.id;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT * FROM student_data\\n\")), mdx(\"h1\", null, \"SQLite + Node.js\"), mdx(\"h3\", null, \"Einrichten\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SQLite Module f\\xFCr Node.js installieren (in Projektordner)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install sqlite3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install sqlite\"))))), mdx(\"h3\", null, \"SQLite in Node.js verwenden\"), mdx(\"h4\", null, \"SQLite Modul in Node.js Code verwenden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import * as sqlite3 from \\\"sqlite3\\\";\\nimport * as sqlite from \\\"sqlite\\\";\\n\")), mdx(\"h4\", null, \"Mit Datenbank verbinden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const dbFilePath: string = \\\"pathToFile/sqliteFileName.db\\\";\\nawait sqlite.open({\\n  filename: dbFilePath,\\n  driver: sqlite3.Database,\\n});\\n\")), mdx(\"h4\", null, \"SQL Befehle ausf\\xFChren\"), mdx(\"p\", null, \"Zum Beispiel mehrere Eintr\\xE4ge auslesen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"console.log(await db.all(\\\"SELECT * FROM student\\\"));\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Befehl an db Funktion \\xFCbergeben\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"verschiedene db Funktionen f\\xFCr auslesen (db.all oder db.get), db anlegen (db.exec), Eintr\\xE4ge einf\\xFCgen (db.run)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/sqlite\"\n  }, \"weitere Informationen\"))), mdx(\"h3\", null, \"Node.js Beispiel\"), mdx(\"a\", {\n    href: \"https://webuser.hs-furtwangen.de/~heintzs/gis/hochschule.db\",\n    download: true\n  }, \"hochschule.db\"), \" Datei in Projektordner legen\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import * as sqlite3 from \\\"sqlite3\\\";\\nimport * as sqlite from \\\"sqlite\\\";\\n\\nconst dbFilePath: string = \\\"hochschule.db\\\"; // sqlite Datei\\n\\ninterface Student {\\n  studentNr: number;\\n  firstName: string;\\n  lastName: string;\\n  semester: number;\\n  course: number;\\n}\\n\\nasync function main() {\\n  const db: sqlite.Database = await sqlite.open({\\n    filename: dbFilePath,\\n    driver: sqlite3.Database,\\n  });\\n\\n  let students: Student[] = <Student[]>await db.all(\\\"SELECT * FROM student\\\");\\n  console.log(students);\\n  await db.close();\\n}\\n\\nmain();\\n\")), mdx(\"h1\", null, \"NoSQL\"), mdx(\"p\", null, \"NoSQL Datenspeicherung (strukturierte Datenspeicher)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not only SQL = Nicht nur SQL -> nicht relationale Datenbanken\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"verschiedene andere Speicherkonzepte (z. B. Dokumentenbasiert, Graphenbasiert, Objektbasiert)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Versuchen Joins zu vermeiden (daf\\xFCr ggf. Daten doppelt und ACID meist nicht unterst\\xFCtzt)\")), mdx(\"p\", null, \"Nachteile relationale Datenbanken\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nicht alle Daten gut als Tabellen darstellbar (z. B. Mediendaten, Texte, unstrukturierte Daten)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schwierigkeiten bei sehr gro\\xDFen Datenmengen und sehr vielen Zugriffen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Joins k\\xF6nnen aufw\\xE4ndig sein und Daten durch Normalisierung un\\xFCbersichtlich\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f\\xFCr Einsatz auf zentralem Server entwickelt (skalieren vertikal, d. h. Ausstattung des Servers muss angepasst werden statt weitere Server)\")), mdx(\"p\", null, \"Vorteile NoSQL Datenspeicherung\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten nicht in starrer Tabellenform -> flexibler, da Tabellen angepasst werden m\\xFCssen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prinzipiell alles speicherbar (Daten mit unbekanntem Aufbau; Daten deren Aufbau sich \\xE4ndert)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verteilte Datenspeichersysteme, d. h. Daten werden auf mehreren Servern verteilt\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"skalieren horizontal, d. h. bei Bedarf k\\xF6nnen neue Server hinzu genommen werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten k\\xF6nnen von Server bezogen werden, der m\\xF6glichst nah beim Client steht\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"besonders geeignet z. B. f\\xFCr Big Data, Streaming\")), mdx(\"h1\", null, \"MongoDB\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name von humongous = gigantisch (da geeignet f\\xFCr gro\\xDFe Datenmengen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"verbreitet, besonders in Kombination mit NodeJS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript (+ zus\\xE4tzliche Operatoren) f\\xFCr Verwaltung und Zugriff statt SQL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speichert Daten im \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://bsonspec.org/\"\n  }, \"BSON Format\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Binary JSON\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"optimiert f\\xFCr schnellen Zugriff und geringen Speicherbedarf\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zus\\xE4tzliche Datentypen, z. B. Datum\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/tutorial/getting-started/\"\n  }, \"Getting Started\")), mdx(\"h3\", null, \"Datenbank Aufbau\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Relational\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"MongoDB\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Datenbank\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tabelle\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Collection\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zeile\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Document (16MB size limit)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Spalte\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"beliebig\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Views\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Views\")))), mdx(\"p\", null, \"Jedes Document erh\\xE4lt automatisch eine \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_id\"), \" als Schl\\xFCssel.\"), mdx(\"h3\", null, \"Datenmodell\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dokument hat kein festgelegtes Schema innerhalb einer Collection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Struktur von Dokumenten kann sich unterscheiden (z. B. bez\\xFCglich Attributen, Anzahl, Datentypen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Struktur jedes Dokuments kann nachtr\\xE4glich individuell ver\\xE4ndert werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Normalerweise praktikabel, wenn Dokumente in Collections zumindest \\xE4hnliche Struktur aufweisen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Es kann eine \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.mongodb.com/manual/core/schema-validation/\"\n  }, \"Schema Validierung\"), \" angegeben werden, um Vorgaben zur Struktur zu machen\")), mdx(\"h4\", null, \"eingebettet vs. normalisiert\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Eingebettetes Datenmodell\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten, die meist zusammen abgerufen/bearbeitet werden, zusammen speichern (in Dokument)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Denormalisierung: ein Datensatz in anderen eingebettet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dopplung von Daten ist dabei erlaubt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datenzugriff dadurch effizienter\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Normalisiertes Datenmodell\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Daten in eigenes Dokument/Collection auslagern wenn:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daten nur selten zusammen abgerufen/bearbeitet werden (z. B. fast immer nur ein Teil ben\\xF6tigt)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bei komplexeren/gr\\xF6\\xDFeren Datenstrukturen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Dokumente/Collections verbinden durch:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Referenz (wie ForeignKey bei SQL) als einzelner Wert oder mehrere in Array (maximale Gr\\xF6\\xDFe ber\\xFCcksichtigen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$lookup operator (wie JOIN) oder zwei Requests ben\\xF6tigt\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Duplikation von Daten vermeiden -> in eigene Collection auslagern\"))))), mdx(\"h4\", null, \"Anmerkungen\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frage nach dem geeigneten Datenmodell durch Flexibilit\\xE4t ggf. schwieriger\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Entscheidung abh\\xE4ngig von den verwendeten Abfragen und deren H\\xE4ufigkeit\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NoSQL: Applikation mit Abfragen zuerst, dann passendes Datenmodell\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Relational: Datenmodell unabh\\xE4ngig von Applikation, dann passende Abfragen\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Auf Effizienz ausgelegt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konsistenz bei CRUD Operationen muss \\xFCber Code gew\\xE4hrleistet werden\")), mdx(\"h3\", null, \"Beispiel Datenmodell\"), mdx(\"p\", null, \"Collection student\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"1234ab\\\"), studentNr: 123456, firstName: \\\"Klaus\\\", lastName: \\\"Meng\\\", semester: 2, faculty: \\\"DM\\\", course: \\\"OMB\\\", lecture_ids: \", \"[ObjectId(\\\"abc234\\\"), ObjectId(\\\"5de678\\\")]\", \"}\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"23bc45\\\"), studentNr: 234567, firstName: \\\"Verena\\\", lastName: \\\"Rist\\\", semester: 6, faculty: \\\"DM\\\", course: \\\"MIB\\\"}\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"3412ce\\\"), studentNr: 345678, firstName: \\\"Samantha\\\", lastName: \\\"Holz\\\", semester: 1, faculty: \\\"DM\\\", course: \\\"OMB\\\"}\")), mdx(\"p\", null, \"Collection faculty\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"1122aa\\\"), name:\\\"DM\\\", course:\", \"[\\\"MIB\\\", \\\"OMB\\\", \\\"MKB\\\"]\", \"}\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"33ee55\\\"), name:\\\"IN\\\"}\")), mdx(\"p\", null, \"Collection lecture\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"abc234\\\"), name: \\\"C#\\\", faculty: \\\"IN\\\", student_ids: \", \"[ObjectId(\\\"1234ab\\\")]\", \"}\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{\", \"_\", \"id: ObjectId(\\\"5de678\\\"), name: \\\"Zeichnen\\\", faculty: \\\"DM\\\", student_ids: \", \"[ObjectId(\\\"1234ab\\\")]\", \"}\")), mdx(\"h1\", null, \"MongoDB Starten\"), mdx(\"h3\", null, \"Installieren\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"download \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.mongodb.com/try/download/community\"\n  }, \"MongoDB Community Edition\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"als msi: kann installiert und als Service gestartet werden\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"als zip: kann \\xFCber Kommandozeile gestartet werden (hier verwendet)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/\"\n  }, \"Anleitung f\\xFCr Windows\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f\\xFCr zip: siehe -> Run MongoDB Community Edition from the Command Interpreter\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"zip Datei entpacken (z. B. in MongoDB Ordner)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data/db Ordner anlegen f\\xFCr Datenbank (z. B. ebenfalls in MongoDB Ordner)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MongoDB \", mdx(\"br\", null), \"\\n|- data \", mdx(\"br\", null), \"\\n|-- db \", mdx(\"br\", null), \"\\n|- zipInstall \", mdx(\"br\", null), \"\\n|-- bin\")))))), mdx(\"h3\", null, \"Starten (zip Installation)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kommandozeile als Admin starten (Windows 10: Start klicken, cmd eingeben, Rechtsklick -> als Administrator ausf\\xFChren)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mongod.exe in bin Verzeichnis aufrufen und mit --dbpath Pfad zum data\\\\db Ordner spezifizieren, z. B.:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cd C:\\\\MongoDB\"), \" -> zum MongoDB Ordner wechseln (Pfad anpassen)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"zipInstall\\\\bin\\\\mongod.exe --dbpath data\\\\db\"), \" -> Datenbanksystem starten\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"danach liegen neue angelegte Dateien im data\\\\db Ordner\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"auf \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"zipInstall\\\\bin\\\\mongo.exe\"), \" klicken (oder \\xFCber Kommandozeile aufrufen) -> hier MongoDB Befehle eingeben\")), mdx(\"h1\", null, \"MongoDB Befehle\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/tutorial/getting-started/\"\n  }, \"https://docs.mongodb.com/manual/tutorial/getting-started/\")), mdx(\"h3\", null, \"Datenbank + Collection\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Befehl\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"use db_name\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zu Datenbank wechseln\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zeigt aktuelle Datenbank\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"show dbs\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zeigt alle Datenbanken (bereits angelegt: admin, config, local)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"show collections\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zeigt alle Collections der aktuellen Datenbank\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.drop()\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Collection l\\xF6schen\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anlegen: Datenbank und Collection wird automatisch erzeugt bei erstem Eintrag\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"existierende DBs: admin, config, local f\\xFCr Management der DB\")), mdx(\"h3\", null, \"Daten CRUD Operationen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Befehl\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Funktion\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.insertOne(JSONdata)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dokument als JSON Datensatz in Collection speichern\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.insertMany([JSONdata1, JSONdata2, ...])\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dokument als JSON Datensatz in Collection speichern\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.find(JSONfind)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"JSON Teil, nach dem in den Dokumenten der Collection gesucht werden soll\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.find()\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zeigt alle Dokumente in einer Collection an\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.replaceOne(JSONfind, JSONupdateData)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Ersetzt das erste Dokument, welches dem JSON Teil entspricht, mit den gegebenen Daten\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.deleteOne(JSONfind)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"L\\xF6scht das erste Dokument, welches dem JSON Teil entspricht\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"db.collection_name.deleteMany(JSONfind)\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"L\\xF6scht alle Dokumente, welche dem JSON Teil entsprechen\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/reference/method/\"\n  }, \"weitere\")), mdx(\"h3\", null, \"Beispiel\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"show dbs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> show dbs\\nadmin       0.000GB\\nconfig      0.000GB\\nlocal       0.000GB\\ntest        0.000GB\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use university\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> use university\\nswitched to db university\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.insertOne({studentNr: 123456, firstName: \\\"Klaus\\\", lastName: \\\"Meng\\\", semester: 2, faculty: \\\"DM\\\", course: \\\"OMB\\\"})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.insertOne({studentNr: 123456, firstName: \\\"Klaus\\\", lastName: \\\"Meng\\\", semester: 2, faculty: \\\"DM\\\", course: \\\"OMB\\\"})\\n{\\n        \\\"acknowledged\\\" : true,\\n        \\\"insertedId\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\")\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.insertMany([{studentNr: 234567, firstName: \\\"Verena\\\", lastName: \\\"Rist\\\", semester: 6, faculty: \\\"DM\\\", course: \\\"MIB\\\"},{studentNr: 345678, firstName: \\\"Samantha\\\", lastName: \\\"Holz\\\", semester: 1, faculty: \\\"DM\\\", course: \\\"OMB\\\"}])\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.insertMany([{studentNr: 234567, firstName: \\\"Verena\\\", lastName: \\\"Rist\\\", semester: 6, faculty: \\\"DM\\\", course: \\\"MIB\\\"},{studentNr: 345678, firstName: \\\"Samantha\\\", lastName: \\\"Holz\\\", semester: 1, faculty: \\\"DM\\\", course: \\\"OMB\\\"}])\\n{\\n        \\\"acknowledged\\\" : true,\\n        \\\"insertedIds\\\" : [\\n                ObjectId(\\\"61a26d0a293da259fc388bc5\\\"),\\n                ObjectId(\\\"61a26d0a293da259fc388bc6\\\")\\n        ]\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.faculty.insertMany([{name:\\\"DM\\\", course:[\\\"MIB\\\", \\\"OMB\\\", \\\"MKB\\\"]}, {name:\\\"IN\\\"}])\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.faculty.insertMany([{name:\\\"DM\\\", course:[\\\"MIB\\\", \\\"OMB\\\", \\\"MKB\\\"]}, {name:\\\"IN\\\"}])\\n{\\n        \\\"acknowledged\\\" : true,\\n        \\\"insertedIds\\\" : [\\n                ObjectId(\\\"61a26d59293da259fc388bc7\\\"),\\n                ObjectId(\\\"61a26d59293da259fc388bc8\\\")\\n        ]\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({studentNr: 123456})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({studentNr: 123456})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\"}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.lecture.insertMany([{name: \\\"C#\\\", faculty_id: 2, student_ids: [ObjectId(\\\"61a26b71293da259fc388bc4\\\")]}, {name: \\\"Zeichnen\\\", faculty_id: 1, student_ids: [ObjectId(\\\"61a26b71293da259fc388bc4\\\")]}])\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"student_ids\"), \": ObjectId von Student mit studentNr 123456, z. B. hier ObjectId(\\\"61a26b71293da259fc388bc4\\\")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.lecture.insertMany([{name: \\\"C#\\\", faculty_id: 2, student_ids: [ObjectId(\\\"61a26b71293da259fc388bc4\\\")]}, {name: \\\"Zeichnen\\\", faculty_id: 1, student_ids: [ObjectId(\\\"61a26b71293da259fc388bc4\\\")]}])\\n{\\n        \\\"acknowledged\\\" : true,\\n        \\\"insertedIds\\\" : [\\n                ObjectId(\\\"61a26eab293da259fc388bc9\\\"),\\n                ObjectId(\\\"61a26eab293da259fc388bca\\\")\\n        ]\\n}\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.update({_id: ObjectId(\\\"61a26b71293da259fc388bc4\\\")}, {\\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", lecture_ids:[ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\")]})\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_id\"), \": ObjectId von Student mit studentNr 123456, z. B. hier ObjectId(\\\"61a26b71293da259fc388bc4\\\")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lecture_ids\"), \": ObjectIds von neu erstellten lectures bei Student mit studentNr 123456 eintragen, z. B. hier ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\")\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.update({_id: ObjectId(\\\"61a26b71293da259fc388bc4\\\")}, {\\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", lecture_ids:[ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\")]})\\nWriteResult({ \\\"nMatched\\\" : 1, \\\"nUpserted\\\" : 0, \\\"nModified\\\" : 1 })\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({studentNr: 123456})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({studentNr: 123456})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.faculty.find()\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.faculty.find()\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d59293da259fc388bc7\\\"), \\\"name\\\" : \\\"DM\\\", \\\"course\\\" : [ \\\"MIB\\\", \\\"OMB\\\", \\\"MKB\\\" ] }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d59293da259fc388bc8\\\"), \\\"name\\\" : \\\"IN\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({course: \\\"OMB\\\"})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({course: \\\"OMB\\\"})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc6\\\"), \\\"studentNr\\\" : 345678, \\\"firstName\\\" : \\\"Samantha\\\", \\\"lastName\\\" : \\\"Holz\\\", \\\"semester\\\" : 1, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({course: \\\"OMB\\\", semester: 1})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({course: \\\"OMB\\\", semester: 1})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc6\\\"), \\\"studentNr\\\" : 345678, \\\"firstName\\\" : \\\"Samantha\\\", \\\"lastName\\\" : \\\"Holz\\\", \\\"semester\\\" : 1, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"show collections\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> show collections\\nfaculty\\nlecture\\nstudent\\n\")), mdx(\"h1\", null, \"MongoDB Operatoren\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/reference/operator/\"\n  }, \"https://docs.mongodb.com/manual/reference/operator/\")), mdx(\"h3\", null, \"Abfrageoperatoren\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.collection_name.find({property_name: {$operator: value}})\")), mdx(\"p\", null, \"Beispiele:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Studenten mit Semester < 3: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"db.student.find({semester: {$lt: 3}})\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Studenten in einem der beiden Kurse \\\"OMB\\\" oder \\\"MKB\\\": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"db.student.find({course: {$in: [\\\"OMB\\\", \\\"MKB\\\"]}})\"))), mdx(\"p\", null, \"Operatoren:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$eq (equals), $lt (less than), $gt (greater than), $in (in)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"kombiniert\"), \": $lte (less or equals), $gte (greater or equals)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"negiert\"), \": $ne (not equals), $nin (not in)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/reference/operator/query/\"\n  }, \"mehr\")), mdx(\"h3\", null, \"Abfragen kombinieren\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.collection_name.find({ $kombinator: [JSONfind, JSONfind]})\")), mdx(\"p\", null, \"Beispiele:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Student in OMB oder in Semester 6: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"db.student.find({ $or: [{course: \\\"OMB\\\"}, {semester: 6}]})\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Student in OMB und Semester >= 2: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"db.student.find({ $and: [{course: \\\"OMB\\\"}, {semester: {$gte: 2}}]})\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alternativ: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"db.student.find({course:\\\"OMB\\\", semester: {$gte: 2}})\"))))), mdx(\"p\", null, \"Operatoren:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"$and (und Verbindung), $or (oder Verbindung)\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/reference/operator/query/\"\n  }, \"mehr\")), mdx(\"h3\", null, \"Ergebnisse f\\xFCr Beispiele\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({semester: {$lt: 3}})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({semester: {$lt: 3}})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc6\\\"), \\\"studentNr\\\" : 345678, \\\"firstName\\\" : \\\"Samantha\\\", \\\"lastName\\\" : \\\"Holz\\\", \\\"semester\\\" : 1, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({course: {$in: [\\\"OMB\\\", \\\"MKB\\\"]}})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({course: {$in: [\\\"OMB\\\", \\\"MKB\\\"]}})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc6\\\"), \\\"studentNr\\\" : 345678, \\\"firstName\\\" : \\\"Samantha\\\", \\\"lastName\\\" : \\\"Holz\\\", \\\"semester\\\" : 1, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({ $or: [{course: \\\"OMB\\\"}, {semester: 6}]})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({ $or: [{course: \\\"OMB\\\"}, {semester: 6}]})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc5\\\"), \\\"studentNr\\\" : 234567, \\\"firstName\\\" : \\\"Verena\\\", \\\"lastName\\\" : \\\"Rist\\\", \\\"semester\\\" : 6, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"MIB\\\" }\\n{ \\\"_id\\\" : ObjectId(\\\"61a26d0a293da259fc388bc6\\\"), \\\"studentNr\\\" : 345678, \\\"firstName\\\" : \\\"Samantha\\\", \\\"lastName\\\" : \\\"Holz\\\", \\\"semester\\\" : 1, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\" }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({ $and: [{course: \\\"OMB\\\"}, {semester: {$gte: 2}}]})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({ $and: [{course: \\\"OMB\\\"}, {semester: {$gte: 2}}]})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"db.student.find({course:\\\"OMB\\\", semester: {$gte: 2}})\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> db.student.find({course:\\\"OMB\\\", semester: {$gte: 2}})\\n{ \\\"_id\\\" : ObjectId(\\\"61a26b71293da259fc388bc4\\\"), \\\"studentNr\\\" : 123456, \\\"firstName\\\" : \\\"Klaus\\\", \\\"lastName\\\" : \\\"Meng\\\", \\\"semester\\\" : 2, \\\"faculty\\\" : \\\"DM\\\", \\\"course\\\" : \\\"OMB\\\", \\\"lecture_ids\\\" : [ ObjectId(\\\"61a26eab293da259fc388bc9\\\"), ObjectId(\\\"61a26eab293da259fc388bca\\\") ] }\\n\")), mdx(\"h1\", null, \"MongoDB + Node.js\"), mdx(\"h3\", null, \"Einrichten\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MongoDB Modul f\\xFCr Node.js installieren (in Projektordner)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install mongodb\"))))), mdx(\"h3\", null, \"MongoDB in Node.js verwenden\"), mdx(\"h4\", null, \"MongoDB Modul in Node.js Code verwenden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import * as mongo from \\\"mongodb\\\";\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.mongodb.com/compatibility/using-typescript-with-mongodb-tutorial\"\n  }, \"MongoDB Typescript Unterst\\xFCtzung\")), mdx(\"h4\", null, \"Mit Datenbank verbinden\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"let url: string = \\\"mongodb://localhost:27017\\\"; // f\\xFCr lokale MongoDB\\nlet mongoClient: mongo.MongoClient = new mongo.MongoClient(url, options);\\nawait mongoClient.connect();\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.mongodb.com/manual/reference/connection-string/\"\n  }, \"MongoDB Verbindungs-URL Aufbau\")), mdx(\"h4\", null, \"Collection ausw\\xE4hlen\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"let collection: mongo.Collection = mongoClient.db(\\\"db_name\\\").collection(\\\"collection_name\\\");\\nawait collection.insert({...});\\nconsole.log(await collection.find({...}).toArray());\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Befehle von Kommandozeile genauso in JavaScript verwendbar (MongoDB muss gestartet sein)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ausnahme: find gibt ein Cursor Objekt zur\\xFCck, welches mit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"toArray()\"), \" in ein Array gewandelt werden kann\")), mdx(\"h3\", null, \"Node.js Beispiel\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import * as mongo from \\\"mongodb\\\";\\n\\nconst mongoUrl: string = \\\"mongodb://localhost:27017\\\"; // f\\xFCr lokale MongoDB\\nlet mongoClient: mongo.MongoClient = new mongo.MongoClient(mongoUrl);\\n\\ninterface Student {\\n  _id?: mongo.ObjectId;\\n  studentNr: number;\\n  firstName: string;\\n  lastName: string;\\n  semester: number;\\n  faculty: string;\\n  course: string;\\n  lecture_ids?: mongo.ObjectId[];\\n}\\n\\nasync function main() {\\n  await mongoClient.connect();\\n  const db: mongo.Db = mongoClient.db(\\\"university\\\");\\n  const studentCollection: mongo.Collection = db.collection(\\\"student\\\");\\n\\n  let newStudent: Student = {\\n    studentNr: 333333,\\n    firstName: \\\"Max\\\",\\n    lastName: \\\"Mustermann\\\",\\n    semester: 1,\\n    faculty: \\\"DM\\\",\\n    course: \\\"OMB\\\",\\n  };\\n  await studentCollection.insertOne(newStudent);\\n  let students: Student[] = <Student[]>(\\n    await studentCollection.find({ studentNr: 333333 }).toArray()\\n  );\\n  console.log(students);\\n  await mongoClient.close();\\n}\\n\\nmain();\\n\")), mdx(\"h1\", null, \"Linksammlung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://link.springer.com/content/pdf/10.1007%2F978-3-030-42224-0.pdf\"\n  }, \"https://link.springer.com/content/pdf/10.1007%2F978-3-030-42224-0.pdf\")), mdx(\"h3\", null, \"Normalisierung\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ionos.de/digitalguide/hosting/hosting-technik/normalisierung-von-datenbanken/\"\n  }, \"https://www.ionos.de/digitalguide/hosting/hosting-technik/normalisierung-von-datenbanken/\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.php-kurs.com/normalisierung.htm\"\n  }, \"https://www.php-kurs.com/normalisierung.htm\")), mdx(\"h3\", null, \"NoSQL\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ionos.de/digitalguide/hosting/hosting-technik/nosql/\"\n  }, \"https://www.ionos.de/digitalguide/hosting/hosting-technik/nosql/\")), mdx(\"h3\", null, \"MongoDB\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.mongodb.com/blog/post/performance-best-practices-mongodb-data-modeling-and-memory-sizing\"\n  }, \"https://www.mongodb.com/blog/post/performance-best-practices-mongodb-data-modeling-and-memory-sizing\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.mongodb.com/developer/article/mongodb-schema-design-best-practices/\"\n  }, \"https://www.mongodb.com/developer/article/mongodb-schema-design-best-practices/\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-transitiveabh\"\n  }, \"Transitive Abh\\xE4ngigkeit: aus der Abh\\xE4ngigkeit a -> b und b -> c folgt, dass auch a -> c\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-transitiveabh\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Grundlagen Datenbanken","date":"19 May, 2022"}}},"pageContext":{"id":"f8d7dcb5-9a7f-5fe4-a96b-762d56d0eade","heading":{"value":"SQL Basics","depth":1},"index":3,"prevSlug":"/lecture/db/2","nextSlug":"/lecture/db/4"}},
    "staticQueryHashes": ["170874137"]}